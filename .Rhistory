)
# Set the working directory and read in the files
setwd("C:/Users/AlexandraTreml/Desktop/MS/QBS103/Project/QBS103_proj")
genes <- read.csv("genes_GSE157103.csv")
participant <- read.csv("series_matrix_GSE157103.csv")
head(genes)
head(participant)
# Rename the first column in genes to 'gene'
genes <- genes %>%
rename(gene = X)
# Filter for 'A2M' gene
genes <- genes %>%
filter(gene == "A2M")
# Pivot the genes dataframe
genes_long <- genes %>%
tidyr::pivot_longer(cols = -gene, names_to = 'id', values_to = 'expression')
#head(genes_long)
# rename id column in participant, select my categorical covariates and continuous variable (+age for eda)
participant <- participant %>%
filter(icu_status == ' yes') %>%
rename(id = participant_id) %>%
select(id, age, sex, mechanical_ventilation, lactate.mmol.l.)
#head(participant)
#join 2 dataframes
df <- left_join(participant, genes_long, by = "id")
# head(df)
#clean up new dataframe
#fill lactate unknowns with NA
df$lactate.mmol.l.[df$lactate.mmol.l. == " unknown"] <- NA
#fill sex unknowns with NA
df$sex[df$sex == " unknown"] <- NA
#remove : from age, and fill with NA
df$age[df$age == " :"] <- NA
head(df)
#create a histogram using sex and gene expression
# Load the necessary library
library(ggplot2)
df <- na.omit(df)
df <- df %>%
select(id, gene, sex, age, mechanical_ventilation, expression, lactate.mmol.l.)
head(df)
df$sex <- as.factor(df$sex)
levels(df$sex)
ggplot(data = df, aes(x = expression, fill = sex)) +
geom_histogram(binwidth = 0.05, position = 'dodge') +
labs(x = 'Gene Expression', y = 'Frequency', title = 'A2M Gene Expression Among COVID ICU Patients') +
scale_fill_manual(values = c("violetred", "royalblue2"))
#create a scatterplot using gene expression and lactate
# Load necessary libraries
library(dplyr)
library(ggplot2)
head(df)
# Convert lactate.mmol.l. to numeric
df$lactate.mmol.l. <- as.numeric(df$lactate.mmol.l.)
# Remove leading and trailing whitespaces from sex column
df$sex <- trimws(df$sex)
# Check unique levels
unique(df$sex)
unique(df$mechanical_ventilation)
# Set factor levels
df$sex <- factor(df$sex, levels = c("male", "female"))
df$mechanical_ventilation <- factor(df$mechanical_ventilation, levels = c(" yes", " no"))
# Filter out values greater than 6.5 for the y-axis
#df <- df %>% filter(lactate.mmol.l. <= 6.5)
#df_vent <- df  %>% filter(mechanical_ventilation = 'yes')
#df_novent <- df  %>% filter(mechanical_ventilation = 'no')
df <- df %>% filter(expression <= 0.5)
# scatterplot vent
ggplot(df, aes(x = expression, y = lactate.mmol.l., color = mechanical_ventilation)) +
geom_point(size = 3) +
scale_y_continuous(breaks = seq(0, ceiling(max(df$lactate.mmol.l., na.rm = TRUE)), by = 0.5)) +
#geom_smooth(method = "lm", se = TRUE) +
labs(x = 'Gene Expression A2M', y = 'Lactate (mmol/l)', title = ' A2M Gene Expression vs Lactate for COVID ICU Patients') +
theme_classic(base_size = 5) +
scale_color_brewer(palette = 'Dark2') +
#scale_color_manual(values = c("male" = "royalblue2", "female" = "violetred3")) +
scale_shape_manual(values = c(" yes" = 19, " no" = 4)) +
theme(
plot.title = element_text(size = 16, face = "bold"), # Center and bold title
axis.title = element_text(size = 12, face = "bold"), # Bold axis titles
axis.text = element_text(size = 12), # Increase axis text size
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
#create a scatterplot using gene expression and lactate
# Load necessary libraries
library(dplyr)
library(ggplot2)
head(df)
# Convert lactate.mmol.l. to numeric
df$lactate.mmol.l. <- as.numeric(df$lactate.mmol.l.)
# Remove leading and trailing whitespaces from sex column
df$sex <- trimws(df$sex)
# Check unique levels
unique(df$sex)
unique(df$mechanical_ventilation)
# Set factor levels
df$sex <- factor(df$sex, levels = c("male", "female"))
df$mechanical_ventilation <- factor(df$mechanical_ventilation, levels = c(" yes", " no"))
# Filter out values greater than 6.5 for the y-axis
df <- df %>% filter(lactate.mmol.l. <= 6.5)
#df_vent <- df  %>% filter(mechanical_ventilation = 'yes')
#df_novent <- df  %>% filter(mechanical_ventilation = 'no')
df <- df %>% filter(expression <= 0.5)
# scatterplot vent
ggplot(df, aes(x = expression, y = lactate.mmol.l., color = mechanical_ventilation)) +
geom_point(size = 3) +
scale_y_continuous(breaks = seq(0, ceiling(max(df$lactate.mmol.l., na.rm = TRUE)), by = 0.5)) +
#geom_smooth(method = "lm", se = TRUE) +
labs(x = 'Gene Expression A2M', y = 'Lactate (mmol/l)', title = ' A2M Gene Expression vs Lactate for COVID ICU Patients') +
theme_classic(base_size = 5) +
scale_color_brewer(palette = 'Dark2') +
#scale_color_manual(values = c("male" = "royalblue2", "female" = "violetred3")) +
#scale_shape_manual(values = c(" yes" = 19, " no" = 4)) +
theme(
plot.title = element_text(size = 16, face = "bold"), # Center and bold title
axis.title = element_text(size = 12, face = "bold"), # Bold axis titles
axis.text = element_text(size = 12), # Increase axis text size
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
#create a scatterplot using gene expression and lactate
# Load necessary libraries
library(dplyr)
library(ggplot2)
head(df)
# Convert lactate.mmol.l. to numeric
df$lactate.mmol.l. <- as.numeric(df$lactate.mmol.l.)
# Remove leading and trailing whitespaces from sex column
df$sex <- trimws(df$sex)
# Check unique levels
unique(df$sex)
unique(df$mechanical_ventilation)
# Set factor levels
df$sex <- factor(df$sex, levels = c("male", "female"))
df$mechanical_ventilation <- factor(df$mechanical_ventilation, levels = c(" yes", " no"))
# Filter out values greater than 6.5 for the y-axis
df <- df %>% filter(lactate.mmol.l. <= 6.5)
#df_vent <- df  %>% filter(mechanical_ventilation = 'yes')
#df_novent <- df  %>% filter(mechanical_ventilation = 'no')
df <- df %>% filter(expression <= 0.5)
# scatterplot vent
ggplot(df, aes(x = expression, y = lactate.mmol.l., color = mechanical_ventilation)) +
geom_point(size = 3) +
scale_y_continuous(breaks = seq(0, ceiling(max(df$lactate.mmol.l., na.rm = TRUE)), by = 0.5)) +
geom_smooth(method = "lm", se = TRUE) +
labs(x = 'Gene Expression A2M', y = 'Lactate (mmol/l)', title = ' A2M Gene Expression vs Lactate for COVID ICU Patients') +
theme_classic(base_size = 5) +
scale_color_brewer(palette = 'Dark2') +
#scale_color_manual(values = c("male" = "royalblue2", "female" = "violetred3")) +
#scale_shape_manual(values = c(" yes" = 19, " no" = 4)) +
theme(
plot.title = element_text(size = 16, face = "bold"), # Center and bold title
axis.title = element_text(size = 12, face = "bold"), # Bold axis titles
axis.text = element_text(size = 12), # Increase axis text size
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
df$mechanical_ventilation <- trimws(df$mechanical_ventilation)
unique(df$mechanical_ventilation)
df$mechanical_ventilation <- factor(df$mechanical_ventilation, levels = c("yes", "no"))
#create a scatterplot using gene expression and lactate
# Load necessary libraries
library(dplyr)
library(ggplot2)
head(df)
# Convert lactate.mmol.l. to numeric
df$lactate.mmol.l. <- as.numeric(df$lactate.mmol.l.)
# Remove leading and trailing whitespaces from sex column
df$sex <- trimws(df$sex)
df$mechanical_ventilation <- trimws(df$mechanical_ventilation)
# Check unique levels
unique(df$sex)
unique(df$mechanical_ventilation)
# Set factor levels
df$sex <- factor(df$sex, levels = c("male", "female"))
df$mechanical_ventilation <- factor(df$mechanical_ventilation, levels = c("yes", "no"))
# Filter out values greater than 6.5 for the y-axis
df <- df %>% filter(lactate.mmol.l. <= 6.5)
df <- df %>% filter(expression <= 0.5)
# scatterplot vent
ggplot(df, aes(x = expression, y = lactate.mmol.l., color = mechanical_ventilation)) +
geom_point(size = 3) +
scale_y_continuous(breaks = seq(0, ceiling(max(df$lactate.mmol.l., na.rm = TRUE)), by = 0.5)) +
geom_smooth(method = "lm", se = TRUE) +
labs(x = 'Gene Expression A2M', y = 'Lactate (mmol/l)', title = ' A2M Gene Expression vs Lactate for COVID ICU Patients') +
theme_classic(base_size = 5) +
scale_color_brewer(palette = 'Dark2') +
#scale_color_manual(values = c("male" = "royalblue2", "female" = "violetred3")) +
scale_shape_manual(values = c( 19, 4)) +
theme(
plot.title = element_text(size = 16, face = "bold"), # Center and bold title
axis.title = element_text(size = 12, face = "bold"), # Bold axis titles
axis.text = element_text(size = 12), # Increase axis text size
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
#create a scatterplot using gene expression and lactate
# Load necessary libraries
library(dplyr)
library(ggplot2)
head(df)
# Convert lactate.mmol.l. to numeric
df$lactate.mmol.l. <- as.numeric(df$lactate.mmol.l.)
# Remove leading and trailing whitespaces from sex column
df$sex <- trimws(df$sex)
df$mechanical_ventilation <- trimws(df$mechanical_ventilation)
# Check unique levels
unique(df$sex)
unique(df$mechanical_ventilation)
# Set factor levels
df$sex <- factor(df$sex, levels = c("male", "female"))
df$mechanical_ventilation <- factor(df$mechanical_ventilation, levels = c("yes", "no"))
# Filter out values greater than 6.5 for the y-axis
df <- df %>% filter(lactate.mmol.l. <= 6.5)
df <- df %>% filter(expression <= 0.5)
# scatterplot vent
ggplot(df, aes(x = expression, y = lactate.mmol.l., color = mechanical_ventilation, shape = mechanical_ventilation)) +
geom_point(size = 3) +
scale_y_continuous(breaks = seq(0, ceiling(max(df$lactate.mmol.l., na.rm = TRUE)), by = 0.5)) +
geom_smooth(method = "lm", se = TRUE) +
labs(x = 'Gene Expression A2M', y = 'Lactate (mmol/l)', title = ' A2M Gene Expression vs Lactate for COVID ICU Patients') +
theme_classic(base_size = 5) +
scale_color_brewer(palette = 'Dark2') +
#scale_color_manual(values = c("male" = "royalblue2", "female" = "violetred3")) +
scale_shape_manual(values = c(19, 4)) +
theme(
plot.title = element_text(size = 16, face = "bold"), # Center and bold title
axis.title = element_text(size = 12, face = "bold"), # Bold axis titles
axis.text = element_text(size = 12), # Increase axis text size
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
# scatterplot vent
ggplot(df, aes(x = expression, y = lactate.mmol.l., color = mechanical_ventilation, shape = mechanical_ventilation)) +
geom_point(size = 3) +
scale_y_continuous(breaks = seq(0, ceiling(max(df$lactate.mmol.l., na.rm = TRUE)), by = 0.5)) +
geom_smooth(method = "lm", se = TRUE) +
labs(x = 'Gene Expression A2M', y = 'Lactate (mmol/l)', title = ' A2M Gene Expression vs Lactate for COVID ICU Patients') +
theme_classic(base_size = 5) +
scale_color_brewer(palette = 'Dark2') +
#scale_color_manual(values = c("male" = "royalblue2", "female" = "violetred3")) +
scale_shape_manual(values = c(1, 4)) +
theme(
plot.title = element_text(size = 16, face = "bold"), # Center and bold title
axis.title = element_text(size = 12, face = "bold"), # Bold axis titles
axis.text = element_text(size = 12), # Increase axis text size
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
#create a scatterplot using gene expression and lactate
# Load necessary libraries
library(dplyr)
library(ggplot2)
head(df)
# Convert lactate.mmol.l. to numeric
df$lactate.mmol.l. <- as.numeric(df$lactate.mmol.l.)
# Remove leading and trailing whitespaces from sex column
df$sex <- trimws(df$sex)
df$mechanical_ventilation <- trimws(df$mechanical_ventilation)
# Check unique levels
unique(df$sex)
unique(df$mechanical_ventilation)
# Set factor levels
df$sex <- factor(df$sex, levels = c("male", "female"))
df$mechanical_ventilation <- factor(df$mechanical_ventilation, levels = c("yes", "no"))
# Filter out values greater than 6.5 for the y-axis
df <- df %>% filter(lactate.mmol.l. <= 6.5)
df <- df %>% filter(expression <= 0.5)
# scatterplot vent
ggplot(df, aes(x = expression, y = lactate.mmol.l., color = mechanical_ventilation, shape = mechanical_ventilation)) +
geom_point(size = 3) +
scale_y_continuous(breaks = seq(0, ceiling(max(df$lactate.mmol.l., na.rm = TRUE)), by = 0.5)) +
#geom_smooth(method = "lm", se = TRUE) +
labs(x = 'Gene Expression A2M', y = 'Lactate (mmol/l)', title = ' A2M Gene Expression vs Lactate for COVID ICU Patients') +
theme_classic(base_size = 5) +
scale_color_brewer(palette = 'Dark2') +
#scale_color_manual(values = c("male" = "royalblue2", "female" = "violetred3")) +
scale_shape_manual(values = c(1, 4)) +
theme(
plot.title = element_text(size = 16, face = "bold"), # Center and bold title
axis.title = element_text(size = 12, face = "bold"), # Bold axis titles
axis.text = element_text(size = 12), # Increase axis text size
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
#create a scatterplot using gene expression and lactate
# Load necessary libraries
library(dplyr)
library(ggplot2)
head(df)
# Convert lactate.mmol.l. to numeric
df$lactate.mmol.l. <- as.numeric(df$lactate.mmol.l.)
# Remove leading and trailing whitespaces from sex column
df$sex <- trimws(df$sex)
df$mechanical_ventilation <- trimws(df$mechanical_ventilation)
# Check unique levels
unique(df$sex)
unique(df$mechanical_ventilation)
# Set factor levels
df$sex <- factor(df$sex, levels = c("male", "female"))
df$mechanical_ventilation <- factor(df$mechanical_ventilation, levels = c("yes", "no"))
# Filter out values greater than 6.5 for the y-axis
df <- df %>% filter(lactate.mmol.l. <= 6.5)
df <- df %>% filter(expression <= 0.5)
# scatterplot vent
ggplot(df, aes(x = expression, y = lactate.mmol.l., color = mechanical_ventilation, shape = mechanical_ventilation)) +
geom_point(size = 3) +
scale_y_continuous(breaks = seq(0, ceiling(max(df$lactate.mmol.l., na.rm = TRUE)), by = 0.5)) +
geom_smooth(method = "lm", se = TRUE) +
labs(x = 'Gene Expression A2M', y = 'Lactate (mmol/l)', title = ' A2M Gene Expression vs Lactate for COVID ICU Patients') +
theme_classic(base_size = 5) +
scale_color_brewer(palette = 'Dark2') +
#scale_color_manual(values = c("male" = "royalblue2", "female" = "violetred3")) +
scale_shape_manual(values = c(16, 24)) +
theme(
plot.title = element_text(size = 16, face = "bold"), # Center and bold title
axis.title = element_text(size = 12, face = "bold"), # Bold axis titles
axis.text = element_text(size = 12), # Increase axis text size
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
#create a scatterplot using gene expression and lactate
# Load necessary libraries
library(dplyr)
library(ggplot2)
head(df)
# Convert lactate.mmol.l. to numeric
df$lactate.mmol.l. <- as.numeric(df$lactate.mmol.l.)
# Remove leading and trailing whitespaces from sex column
df$sex <- trimws(df$sex)
df$mechanical_ventilation <- trimws(df$mechanical_ventilation)
# Check unique levels
unique(df$sex)
unique(df$mechanical_ventilation)
# Set factor levels
df$sex <- factor(df$sex, levels = c("male", "female"))
df$mechanical_ventilation <- factor(df$mechanical_ventilation, levels = c("yes", "no"))
# Filter out values greater than 6.5 for the y-axis
df <- df %>% filter(lactate.mmol.l. <= 6.5)
df <- df %>% filter(expression <= 0.5)
# scatterplot vent
ggplot(df, aes(x = expression, y = lactate.mmol.l., color = mechanical_ventilation, shape = mechanical_ventilation)) +
geom_point(size = 3) +
scale_y_continuous(breaks = seq(0, ceiling(max(df$lactate.mmol.l., na.rm = TRUE)), by = 0.5)) +
geom_smooth(method = "lm", se = TRUE) +
labs(x = 'Gene Expression A2M', y = 'Lactate (mmol/l)', title = ' A2M Gene Expression vs Lactate for COVID ICU Patients') +
theme_classic(base_size = 5) +
scale_color_brewer(palette = 'Dark2') +
#scale_color_manual(values = c("male" = "royalblue2", "female" = "violetred3")) +
scale_shape_manual(values = c(16, 17)) +
theme(
plot.title = element_text(size = 16, face = "bold"), # Center and bold title
axis.title = element_text(size = 12, face = "bold"), # Bold axis titles
axis.text = element_text(size = 12), # Increase axis text size
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
#create a scatterplot using gene expression and lactate
# Load necessary libraries
library(dplyr)
library(ggplot2)
#head(df)
# Convert lactate.mmol.l. to numeric
df$lactate.mmol.l. <- as.numeric(df$lactate.mmol.l.)
# Remove leading and trailing whitespaces from sex column
df$sex <- trimws(df$sex)
df$mechanical_ventilation <- trimws(df$mechanical_ventilation)
# Check unique levels
unique(df$sex)
unique(df$mechanical_ventilation)
# Set factor levels
df$sex <- factor(df$sex, levels = c("male", "female"))
df$mechanical_ventilation <- factor(df$mechanical_ventilation, levels = c("yes", "no"))
# Filter out values greater than 6.5 for the y-axis
df <- df %>% filter(lactate.mmol.l. <= 6.5)
df <- df %>% filter(expression <= 0.5)
# scatterplot vent
ggplot(df, aes(x = expression, y = lactate.mmol.l., color = mechanical_ventilation, shape = mechanical_ventilation)) +
geom_point(size = 3) +
scale_y_continuous(breaks = seq(0, ceiling(max(df$lactate.mmol.l., na.rm = TRUE)), by = 0.5)) +
geom_smooth(method = "lm", se = TRUE) +
labs(x = 'Gene Expression A2M', y = 'Lactate (mmol/l)', title = ' A2M Gene Expression vs Lactate for COVID ICU Patients') +
theme_classic(base_size = 5) +
#scale_color_brewer(palette = 'Dark2') +
scale_color_manual(values = c("yes" = "royalblue2", "no" = "violetred3")) +
scale_shape_manual(values = c(16, 17)) +
theme(
plot.title = element_text(size = 16, face = "bold"), # Center and bold title
axis.title = element_text(size = 12, face = "bold"), # Bold axis titles
axis.text = element_text(size = 12), # Increase axis text size
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
library(tidyverse)
library(cleaner) # rdate function
set.seed(1234)
#covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
#'male' = rbinom(500,size = 1,prob = 0.5),
#'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
#'datediagnsis' = sample(rdate(n = 2000,min = '2020-01-01',
#max = '2023-12-31'),size = 500,replace = T))
mutate(diagnosis.age = as.matrix(difftime(ymd(datediagnsis),ymd(age),units = 'days'))/365.25) %>%
#covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
#'male' = rbinom(500,size = 1,prob = 0.5),
#'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
#'datediagnsis' = sample(rdate(n = 2000,min = '2020-01-01',
#max = '2023-12-31'),size = 500,replace = T))
covar %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
geom_histogram(color = 'black',alpha = 0.6) +
labs(x = 'Age at Diagnosis (yrs)',y = 'Total Participants',fill = 'Gender') +
ggplot(aes(x = diagnosis.age,fill = gender))
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
'male' = rbinom(500,size = 1,prob = 0.5),
'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
'datediagnsis' = sample(rdate(n = 2000,min = '2020-01-01',
max = '2023-12-31'),size = 500,replace = T)))
head(covar)
head(covar)
head(covar)
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
'male' = rbinom(500, size = 1, prob = 0.5),
'age' = sample(age_dates, size = 500, replace = TRUE),
'datediagnosis' = sample(diagnosis_dates, size = 500, replace = TRUE))
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
'male' = rbinom(500, size = 1, prob = 0.5),
'age' = sample(age_dates, size = 500, replace = TRUE),
'datediagnosis' = sample(diagnosis_dates, size = 500, replace = TRUE))
age_dates <- seq.Date(as.Date('2010-01-01'), as.Date('2015-12-31'), by="day")
diagnosis_dates <- seq.Date(as.Date('2020-01-01'), as.Date('2023-12-31'), by="day")
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
'male' = rbinom(500, size = 1, prob = 0.5),
'age' = sample(age_dates, size = 500, replace = TRUE),
'datediagnosis' = sample(diagnosis_dates, size = 500, replace = TRUE))
head(covar)
geom_histogram(color = 'black',alpha = 0.6) +
scale_color_manual(values = c('skyblue2','thistle3'),labels = c('Male','Female')) +
labs(x = 'Age at Diagnosis (yrs)',y = 'Total Participants',fill = 'Gender') +
theme_classic() + theme(legend.position = 'top')
covar %>%
mutate(diagnosis.age = as.matrix(difftime(ymd(datediagnsis),ymd(age),units = 'days'))/365.25) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
ggplot(aes(x = diagnosis.age,fill = gender)) +
geom_histogram(color = 'black',alpha = 0.6) +
scale_color_manual(values = c('skyblue2','thistle3'),labels = c('Male','Female')) +
labs(x = 'Age at Diagnosis (yrs)',y = 'Total Participants',fill = 'Gender') +
theme_classic() + theme(legend.position = 'top')
covar %>%
mutate(diagnosis.age = as.matrix(difftime(ymd(diagnosis_dates),ymd(age_dates),units = 'days'))/365.25) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
ggplot(aes(x = diagnosis.age,fill = gender)) +
geom_histogram(color = 'black',alpha = 0.6) +
scale_color_manual(values = c('skyblue2','thistle3'),labels = c('Male','Female')) +
labs(x = 'Age at Diagnosis (yrs)',y = 'Total Participants',fill = 'Gender') +
theme_classic() + theme(legend.position = 'top')
set.seed(1234)
library(lubridate)
install.packages("lubridate")
library(cleaner) # For the rdate function, if needed
install.packages('cleaner')
library(tidyverse)
install.packages('tidyverse')
set.seed(1234)
library(tidyverse)
library(cleaner) # For the rdate function, if needed
library(lubridate)
set.seed(1234)
age_dates <- seq.Date(as.Date('2010-01-01'), as.Date('2015-12-31'), by="day")
diagnosis_dates <- seq.Date(as.Date('2020-01-01'), as.Date('2023-12-31'), by="day")
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
'male' = rbinom(500, size = 1, prob = 0.5),
'age' = sample(age_dates, size = 500, replace = TRUE),
'datediagnosis' = sample(diagnosis_dates, size = 500, replace = TRUE))
head(covar)
covar %>%
mutate(diagnosis.age = as.numeric(difftime(ymd(datediagnosis), ymd(age), units = 'days')) / 365.25) %>%
mutate(gender = ifelse(male == 1, 'male', 'female')) %>%
ggplot(aes(x = diagnosis.age, fill = gender)) +
geom_histogram(color = 'black', alpha = 0.6) +
scale_fill_manual(values = c('skyblue2', 'thistle3'), labels = c('Male', 'Female')) +
labs(x = 'Age at Diagnosis (yrs)', y = 'Total Participants', fill = 'Gender') +
theme_classic() +
theme(legend.position = 'top')
mtx <- read.csv("QBS103_GSE157103_series_matrix.csv", header = TRUE)
getwd()
setwd('C:/Users/AlexandraTreml/Desktop/MS/QBS103/Project/QBS103_proj')
mtx <- read.csv("genes_series_matrix.csv", header = TRUE)
mtx <- read.csv("genes_seriesMatrix.csv", header = TRUE)
genes <- read.csv("genes_GSE157103.csv", header = TRUE)
print(head(mtx))
print(head(genes))
genes <- data.frame(genes)
df <- merge(genes, mtx, by = 'row.names', all = TRUE)
rownames(df) <- df$Row.names
df_sub <- df[c("A1BG","age","sex","icu_status",)]
df_sub <- df[c("A1BG","age","sex","icu_status")]
df_sub <- df[c("A1BG","age","sex","icu_status")]
df <- merge(genes, mtx, by = 'row.names', all = TRUE)
head(df)
print(rownames(df))
print(rownames(df))
head(df)
print(head(mtx))
mtx <- read.csv("genes_seriesMatrix.csv", header = TRUE)
genes <- read.csv("genes_GSE157103.csv", header = TRUE)
print(head(mtx))
df_sub <- df[c("age","sex","icu_status")]
df_sub <- df[c("age","sex","expression")]
head(df_sub)
